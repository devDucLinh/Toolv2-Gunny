
function SkillExpFunc(Exp0,a,Level,Time,Range)
	return floor(Exp0*(a^(Level-1))*Time*Range/2)
end

SKILLS={
	congkichvatlynpc={
		physicsdamage_v={
			[1]={{1,50/5},{2,100/5},{3,200/5},{4,300/5},{5,400/5},{6,600/5},{7,800/5}},
			[3]={{1,50/5},{2,100/5},{3,200/5},{4,300/5},{5,400/5},{6,600/5},{7,800/5}}
		},
	},
	congkichkimnpc={
		physicsdamage_v={
			[1]={{1,500/5},{2,600/5},{3,700/5},{4,1000/5},{5,1500/5},{11,100/5},{12,150/5},{13,200/5},{14,250/5},{15,300/5},{16,350/5},{17,400/5},{18,500/5},{19,600/5},{20,700/5},{21,1000/5},{22,1500/5}},
			[3]={{1,500/5},{2,600/5},{3,700/5},{4,1000/5},{5,1500/5},{11,100/5},{12,150/5},{13,200/5},{14,250/5},{15,300/5},{16,350/5},{17,400/5},{18,500/5},{19,600/5},{20,700/5},{21,1000/5},{22,1500/5}},
		},
		missle_speed_v={{{1,24},{20,24}}},
		missle_lifetime_v={{{1,18},{20,18}}},
		skill_misslenum_v={{{1,1},{10,1},{11,16},{12,16}}},
	},
	congkichbangnpc={
		colddamage_v={
			[1]={{1,500*4/50},{2,600*4/50},{3,700*4/50},{4,1000*5/50},{5,1500*8/50},{11,100*8/50},{12,150*8/50},{13,200*8/50},{14,250*8/50},{15,300*8/50},{16,350*8/50},{17,400*8/50},{18,500*8/50},{19,600*8/50},{20,700*8/50},{21,1000*8/50},{22,1500*8/50}},
			[2]={{1,18},{5,54},{11,18},{22,54}},
			[3]={{1,500*4/50},{2,600*4/50},{3,700*4/50},{4,1000*5/50},{5,1500*8/50},{11,100*8/50},{12,150*8/50},{13,200*8/50},{14,250*8/50},{15,300*8/50},{16,350*8/50},{17,400*8/50},{18,500*8/50},{19,600*8/50},{20,700*8/50},{21,1000*8/50},{22,1500*8/50}},
		},
		missle_lifetime_v={{{1,18},{20,18}}},
		missle_speed_v={{{1,24},{20,24}}},
		skill_misslenum_v={{{1,1},{10,1},{11,16},{12,16}}},
		magicdamage_v={{{1,10},{6,25},{20,25}}},
	},
	congkichdocnpc={ 
		poisondamage_v={{{1,500/70},{2,600/70},{3,700/70},{4,1000/55},{5,1500/35},{11,100/35},{12,150/35},{13,200/35},{14,250/35},{15,300/35},{16,350/35},{17,400/35},{18,500/35},{19,600/35},{20,700/35},{21,1000/35},{22,1500/35}},{{1,60},{20,60}},{{1,10},{20,10}}},
		missle_speed_v={{{1,24},{20,24}}},
		skill_misslenum_v={{{1,1},{10,1},{11,16},{12,16}}},
		missle_lifetime_v={{{1,18},{20,18}}},
		magicdamage_v={{{1,10},{6,25},{20,25}}},
			
	},
	congkichhoanpc={
		firedamage_v={
			[1]={{1,500*6/50},{2,600*6/50},{3,700*6/50},{4,1000*8/50},{5,1500*12/50},{11,100*12/50},{12,150*12/50},{13,200*12/50},{14,250*12/50},{15,300*12/50},{16,350*12/50},{17,400*12/50},{18,500*12/50},{19,600*12/50},{20,700*12/50},{21,1000*12/50},{22,1500*12/50}},
			[3]={{1,500*6/50},{2,600*6/50},{3,700*6/50},{4,1000*8/50},{5,1500*12/50},{11,100*12/50},{12,150*12/50},{13,200*12/50},{14,250*12/50},{15,300*12/50},{16,350*12/50},{17,400*12/50},{18,500*12/50},{19,600*12/50},{20,700*12/50},{21,1000*12/50},{22,1500*12/50}},
		},
		missle_lifetime_v={{{1,18},{20,18}}},
		missle_speed_v={{{1,24},{20,24}}},
		skill_misslenum_v={{{1,1},{10,1},{11,16},{12,16}}},
		magicdamage_v={{{1,10},{6,25},{20,25}}},		
	},
	congkichthonpc={
		lightingdamage_v={
			[1]={{1,500*9/100},{2,600*9/100},{3,700*9/100},{4,1000*9/75},{5,1500*9/50},{11,100*9/50},{12,150*9/50},{13,200*9/50},{14,250*9/50},{15,300*9/50},{16,350*9/50},{17,400*9/50},{18,500*9/50},{19,600*9/50},{20,700*9/50},{21,1000*9/50},{22,1500*9/50}},
			[3]={{1,500*9/100},{2,600*9/100},{3,700*9/100},{4,1000*9/75},{5,1500*9/50},{11,100*9/50},{12,150*9/50},{13,200*9/50},{14,250*9/50},{15,300*9/50},{16,350*9/50},{17,400*9/50},{18,500*9/50},{19,600*9/50},{20,700*9/50},{21,1000*9/50},{22,1500*9/50}},
		},
		skill_misslenum_v={{{1,1},{10,1},{11,16},{12,16}}},
		missle_speed_v={{{1,24},{20,24}}},
		magicdamage_v={{{1,10},{6,25},{20,25}}},
		missle_lifetime_v={{{1,18},{20,18}}},
		stun_p={{{1,5},{5,10},{11,10},{22,20}},{{1,6},{5,11},{11,11},{22,21}}}
	},
}

function Line(x,x1,y1,x2,y2)
	if(x2==x1) then
		return y2
	end
	return (y2-y1)*(x-x1)/(x2-x1)+y1
end


function Conic(x,x1,y1,x2,y2)
	if((x1 < 0) or (x2<0))then 
		return 0
	end
	if(x2==x1) then
		return y2
	end
	return (y2-y1)*x*x/(x2*x2-x1*x1)-(y2-y1)*x1*x1/(x2*x2-x1*x1)+y1
end


function Extrac(x,x1,y1,x2,y2)
	if((x1 < 0) or (x2<0))then 
		return 0
	end
	if(x2==x1) then
		return y2
	end
	return (y2-y1)*(x-x1)/(x2-x1)+y1
end

function Link(x,points)
	num = getn(points)
	if(num<2) then
		return -1
	end
	for i=1,num do
		if(points[i][3]==nil) then
			points[i][3]=Line
		end
	end
	if(x < points[1][1]) then
		return points[1][3](x,points[1][1],points[1][2],points[2][1],points[2][2])
	end
	if(x > points[num][1]) then
		return points[num][3](x,points[num-1][1],points[num-1][2],points[num][1],points[num][2])
	end
	
	c = 2
	for i=2,num do
		if((x >= points[i-1][1]) and (x <= points[i][1])) then
			c = i
			break
		end
	end
	return points[c][3](x,points[c-1][1],points[c-1][2],points[c][1],points[c][2])
end

function GetSkillLevelData(levelname, data, level)
	if(data==nil) then
		return ""
	end
	if(data == "") then
		return ""
	end
	if(SKILLS[data]==nil) then
		return ""
	end
	if(SKILLS[data][levelname]==nil) then
		return ""
	end
	if(SKILLS[data][levelname][1]==nil) then
		SKILLS[data][levelname][1]={{0,0},{20,0}}
	end
	if(SKILLS[data][levelname][2]==nil) then
		SKILLS[data][levelname][2]={{0,0},{20,0}}
	end
	if(SKILLS[data][levelname][3]==nil) then
		SKILLS[data][levelname][3]={{0,0},{20,0}}
	end
	p1=floor(Link(level,SKILLS[data][levelname][1]))
	p2=floor(Link(level,SKILLS[data][levelname][2]))
	p3=floor(Link(level,SKILLS[data][levelname][3]))
	return Param2String(p1,p2,p3)
end;

function Param2String(Param1, Param2, Param3)
return Param1..","..Param2..","..Param3
end;

